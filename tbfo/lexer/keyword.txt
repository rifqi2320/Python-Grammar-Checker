# Lexer only support ASCII Printable Characters
# Anything over than printable should raise error

SPACE
# Keywords
FROM from
IMPORT import
ASYNC async
AWAIT await
AS as
CLASS class
DEF def
RETURN return
PASS pass
RAISE raise
CONTINUE continue
BREAK break
ELIF elif
ELSE else
IF if
FOR for
WHILE while
NONE None
TRUE True
FALSE False
WITH with

# Boolean Logic
NOT not
AND and
OR or
IS is
IN in

NON-SPACE

# Assignment (+ Augmented)
ASSIGN =
ADDA +=
SUBA -=
MULA *=
MATMULA @=
DIVA /=
MODA %=
BANDA &=
BORA |=
BXORA ^=
BSHLA <<=
BSHRA >>=
POWA **=
IDIVA //=

# Arithmetic and Binary Operator
ADD +
SUB -
MUL *
MATMUL @
DIV /
MOD %
BAND &
BOR |
BXOR ^
BSHL <<
BSHR >>
POW **
IDIV //

# Logical Operator
EQ ==
NEQ <>
NEQ !=
GEQT >=
GT >
LEQT <=
LT <
TRIPLEQUOTE2 """
TRIPLEQUOTE1 '''
HASHTAG #

# Misc
QUOTE2 "
QUOTE1 '
COLON :
SEMICOLON ;
ELIPSIS ...
DOT .
LC {
RC }
LB [
RB ]
LP (
RP )
COMMA ,

# NL should be supported by Lexer
# and defined as \n or \r\n (OS-specific)

# End input will include a ENDMARK token
